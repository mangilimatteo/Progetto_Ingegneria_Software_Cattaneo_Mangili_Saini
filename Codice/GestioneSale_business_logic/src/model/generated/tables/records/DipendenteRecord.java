/*
 * This file is generated by jOOQ.
 */
package model.generated.tables.records;


import model.generated.tables.Dipendente;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DipendenteRecord extends UpdatableRecordImpl<DipendenteRecord> implements Record5<String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DIPENDENTE.NOME</code>.
     */
    public void setNome(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>DIPENDENTE.NOME</code>.
     */
    public String getNome() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DIPENDENTE.COGNOME</code>.
     */
    public void setCognome(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>DIPENDENTE.COGNOME</code>.
     */
    public String getCognome() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DIPENDENTE.MATRICOLA</code>.
     */
    public void setMatricola(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>DIPENDENTE.MATRICOLA</code>.
     */
    public String getMatricola() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DIPENDENTE.PASSWORD</code>.
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>DIPENDENTE.PASSWORD</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DIPENDENTE.RUOLO</code>.
     */
    public void setRuolo(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>DIPENDENTE.RUOLO</code>.
     */
    public String getRuolo() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Dipendente.DIPENDENTE.NOME;
    }

    @Override
    public Field<String> field2() {
        return Dipendente.DIPENDENTE.COGNOME;
    }

    @Override
    public Field<String> field3() {
        return Dipendente.DIPENDENTE.MATRICOLA;
    }

    @Override
    public Field<String> field4() {
        return Dipendente.DIPENDENTE.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return Dipendente.DIPENDENTE.RUOLO;
    }

    @Override
    public String component1() {
        return getNome();
    }

    @Override
    public String component2() {
        return getCognome();
    }

    @Override
    public String component3() {
        return getMatricola();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getRuolo();
    }

    @Override
    public String value1() {
        return getNome();
    }

    @Override
    public String value2() {
        return getCognome();
    }

    @Override
    public String value3() {
        return getMatricola();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getRuolo();
    }

    @Override
    public DipendenteRecord value1(String value) {
        setNome(value);
        return this;
    }

    @Override
    public DipendenteRecord value2(String value) {
        setCognome(value);
        return this;
    }

    @Override
    public DipendenteRecord value3(String value) {
        setMatricola(value);
        return this;
    }

    @Override
    public DipendenteRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public DipendenteRecord value5(String value) {
        setRuolo(value);
        return this;
    }

    @Override
    public DipendenteRecord values(String value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DipendenteRecord
     */
    public DipendenteRecord() {
        super(Dipendente.DIPENDENTE);
    }

    /**
     * Create a detached, initialised DipendenteRecord
     */
    public DipendenteRecord(String nome, String cognome, String matricola, String password, String ruolo) {
        super(Dipendente.DIPENDENTE);

        setNome(nome);
        setCognome(cognome);
        setMatricola(matricola);
        setPassword(password);
        setRuolo(ruolo);
        resetChangedOnNotNull();
    }
}
