/*
 * This file is generated by jOOQ.
 */
package model.generated.tables.records;


import model.generated.tables.Interventi;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InterventiRecord extends TableRecordImpl<InterventiRecord> implements Record8<String, String, String, String, String, Object, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>INTERVENTI.ID</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>INTERVENTI.ID</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>INTERVENTI.PAZIENTE</code>.
     */
    public void setPaziente(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>INTERVENTI.PAZIENTE</code>.
     */
    public String getPaziente() {
        return (String) get(1);
    }

    /**
     * Setter for <code>INTERVENTI.DESCRIZIONE</code>.
     */
    public void setDescrizione(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>INTERVENTI.DESCRIZIONE</code>.
     */
    public String getDescrizione() {
        return (String) get(2);
    }

    /**
     * Setter for <code>INTERVENTI.DIAGNOSI</code>.
     */
    public void setDiagnosi(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>INTERVENTI.DIAGNOSI</code>.
     */
    public String getDiagnosi() {
        return (String) get(3);
    }

    /**
     * Setter for <code>INTERVENTI.ANAMNESI_PROSSIMA</code>.
     */
    public void setAnamnesiProssima(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>INTERVENTI.ANAMNESI_PROSSIMA</code>.
     */
    public String getAnamnesiProssima() {
        return (String) get(4);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setTempo(Object value) {
        set(5, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getTempo() {
        return get(5);
    }

    /**
     * Setter for <code>INTERVENTI.NOTE</code>.
     */
    public void setNote(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>INTERVENTI.NOTE</code>.
     */
    public String getNote() {
        return (String) get(6);
    }

    /**
     * Setter for <code>INTERVENTI.VIA</code>.
     */
    public void setVia(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>INTERVENTI.VIA</code>.
     */
    public String getVia() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, String, String, String, Object, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, String, String, String, String, Object, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Interventi.INTERVENTI.ID;
    }

    @Override
    public Field<String> field2() {
        return Interventi.INTERVENTI.PAZIENTE;
    }

    @Override
    public Field<String> field3() {
        return Interventi.INTERVENTI.DESCRIZIONE;
    }

    @Override
    public Field<String> field4() {
        return Interventi.INTERVENTI.DIAGNOSI;
    }

    @Override
    public Field<String> field5() {
        return Interventi.INTERVENTI.ANAMNESI_PROSSIMA;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Field<Object> field6() {
        return Interventi.INTERVENTI.TEMPO;
    }

    @Override
    public Field<String> field7() {
        return Interventi.INTERVENTI.NOTE;
    }

    @Override
    public Field<String> field8() {
        return Interventi.INTERVENTI.VIA;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPaziente();
    }

    @Override
    public String component3() {
        return getDescrizione();
    }

    @Override
    public String component4() {
        return getDiagnosi();
    }

    @Override
    public String component5() {
        return getAnamnesiProssima();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object component6() {
        return getTempo();
    }

    @Override
    public String component7() {
        return getNote();
    }

    @Override
    public String component8() {
        return getVia();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPaziente();
    }

    @Override
    public String value3() {
        return getDescrizione();
    }

    @Override
    public String value4() {
        return getDiagnosi();
    }

    @Override
    public String value5() {
        return getAnamnesiProssima();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object value6() {
        return getTempo();
    }

    @Override
    public String value7() {
        return getNote();
    }

    @Override
    public String value8() {
        return getVia();
    }

    @Override
    public InterventiRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public InterventiRecord value2(String value) {
        setPaziente(value);
        return this;
    }

    @Override
    public InterventiRecord value3(String value) {
        setDescrizione(value);
        return this;
    }

    @Override
    public InterventiRecord value4(String value) {
        setDiagnosi(value);
        return this;
    }

    @Override
    public InterventiRecord value5(String value) {
        setAnamnesiProssima(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public InterventiRecord value6(Object value) {
        setTempo(value);
        return this;
    }

    @Override
    public InterventiRecord value7(String value) {
        setNote(value);
        return this;
    }

    @Override
    public InterventiRecord value8(String value) {
        setVia(value);
        return this;
    }

    @Override
    public InterventiRecord values(String value1, String value2, String value3, String value4, String value5, Object value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InterventiRecord
     */
    public InterventiRecord() {
        super(Interventi.INTERVENTI);
    }

    /**
     * Create a detached, initialised InterventiRecord
     */
    public InterventiRecord(String id, String paziente, String descrizione, String diagnosi, String anamnesiProssima, Object tempo, String note, String via) {
        super(Interventi.INTERVENTI);

        setId(id);
        setPaziente(paziente);
        setDescrizione(descrizione);
        setDiagnosi(diagnosi);
        setAnamnesiProssima(anamnesiProssima);
        setTempo(tempo);
        setNote(note);
        setVia(via);
        resetChangedOnNotNull();
    }
}
