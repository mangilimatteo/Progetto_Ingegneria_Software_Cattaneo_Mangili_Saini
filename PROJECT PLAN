PROJECT PLAN:

1. INTRODUZIONE:

Lo scopo del progetto è creare un software per la gestione delle sale di un ospedale, tenendo conto degli interventi a cui i pazienti devono sottoporsi e
anche ai singoli medici operanti. L'obbiettivo principale è raggiungere una forma stabile e funzionante del programma, anche se non ancora 
commercializzabilie, soprattutto dal punto di vita grafico.
Il paziente va in visita al medico e si decide che deve essere operato; il medico inserisce il paziente nel sistema, il quale contiene una pagina anagrafica per 
ogni paziente (dove sono conntenute le informazioni anagrafiche e mediche ed è importante che in ogni momento si possa accedere all’anagrafica del paziente).

Il paziente entra in una lista di graduatoria dell’intervento specifico a cui si deve sottoporre.
La cabina di regia contatta il paziente per dargli le date degli esami che dovrà eseguire prima dell’intervento.
Il paziente svolge gli esami, e, una volta svolti tutti, viene chiamato per fare l’intervento; a questo punto,
la cabina di regia lo inserisce nella lista delle persone pronte per fare l’intervento, in modo che il medico, una settimana prima, può fare la lista operatoria, 
che schedula giorno per giorno chi verrà operato (le liste operatorie possono essere modificate in qualsiasi momento dal medico)

Nel giorno dell’intervento si tiene traccia di tutti i movimenti, i rischi, l'anestesia adoperata, la diagnosi e la procedura dell'intervento del paziente 
in un verbale; nel verbale sono inoltre contenuti i nomi dell'equipe medica:
cha ha effettuato l'operazione:
o	Primo operatore (medico)
o	Secondo operatore (medico, con opzione “nessun operatore”)
o	Terzo operatore (medico, opzionale)
o	Anestesista (medico, opzionale in base a lista operatoria)
o	Strumentista (infermiere)
o	Infermiere di sala (infermiere)
o	Aiutoanestesista (infermiere)
o	Tecnico di radiologia (opzionale)
Il primo operatore può scrivere tutto il verbale. L’infermiere può solo scrivere gli orari, l’equipe infermieristica e il tecnico di radiologia.
L’anestesista può scrivere i suoi dati e i dati sull’anestesia.
Il verbale a fine intervento deve essere stampato.


2. MODELLO DEL PROCESSO

Il Modello del progetto in questione è un modello A Cascata:
- ogni fase del progetto è definita e la successiva fase fa riferimento alla precedente;
- per ogni fase richiede V&V (Verifica e Validazione), rispettivamente per soddisfare i requisiti 
  del progetto stesso (è necessario valutare la correttezza del passaggio alla fase successiva) e per 
  capire se il sistema risponde alle esigenze dell'utente (dobbiamo capire se stiamo costruendo il progetto in modo corretttpo).

Prima della stesura del progetto stesso, è necessaria un'attenta analisi del progetto per capire le varie problematiche legate ad esso.


3. ORGANIZZAZIONE DEL PROGETTO

Il team è composto da tre persone:

1. Nicola Cattaneo
2. Matteo Mangili
3. Marco Saini

I tre collaboratori si dividono i vari compiti: la stesura del Project Plan / Presentazione Progetto (Mangili), creazione dei Diagrammi (Saini),
stesura codice sorgente (Cattaneo); spesso è necessario lavorare in coppia, al fine di ottimizzare la collaborazione tra i singoli individui e 
minimizzare il margine di errore.
I tre collaboratori lavorano principalmente da soli per le varie parti, tenendosi aggiornati quotidianamente,
e in settimana si incontrano nell'Aula Studio dell'Edificio C dell'Università degli Studi di Bergamo.

GitHub è lo strumento prescelto per la gestione della documentazione relativa al progetto sia per la condivisione di codice, diagrammi e richieste di modifica.


4. STANDARD, LINEE GUIDA, PROCEDURE

Il software implementato è un architettura Client-Server:
- Client
- Server

5. ATTIVITA' DI GESTIONE
Per gestire tutte le parti prodotte nello sviluppo del progetto è necessario fissare delle attività di gestione:
- Ogni membro del team labvora alla sua parte e in caso di difficoltà, si rivolgeva agli altri membri, al ffine
  di risolvere eventuali problematiche
- Ogni settimana i membri del team si incontrano per definire

6. RISCHI
I rischi maggiori sono:
- mancare la consegna finale del progetto causa impegni universitari e non di ciascun membro del team.
- trovare giorni della settimana in cui tutti i membri del team potevano incontrarsi e confrontarsi insieme sul progetto, causa impegni extra-scolastici
  di ognuno.
- difficoltà ad ottenere un software che rispondesse a tutte le esigenze/requisiti del problema proposto.

7. PERSONALE E TECNICHE
Il team ha comiciato a lavorare al progetto a fine Ottobre / inizio Novembre, per poi seguire i vari punti della tabella di marcia, cercando di restare il più 
possibile nei tempi concordati. 

8. METODI E TECNICHE
L'ambiente di sviluppo utillizzato è GitHUB (per la compilazione delle varie parti del progetto), StarUML (per la creazione dei vari Diagrammi relativi al progetto), 
Eclipse (per la stesura del codice).
//Rivedi capitolo 13 per test

9. GARANZIA DI QUALITA'
Per garantire la qualità del Sistema sono necessari vari fattori:
- Correttezza, il programma soddisfa le sue specifiche e gli obiettivi proposti dall'utente;
- Affidabilità, il programma deve essere in grado di eseguire la sua funzione con la precisa richiesta;
- Efficienza, la quantità di risorse di calcolo e di codice richieste dal programma per eseguire una funzione;
- Integrità, misura in cui è possibile controllare l'accesso al software o i ddati da parte di persone non autorizzzate;
- Usabilità, sforzo richiesto per apprendere, utilizzare, preparere l'input e interpretare l'output del programma;
- Manuntenibilità, sforzo richiesto per individuare e correggere errrori;
- Testabilità, per testare che il programma svolga la funzione prevista;
- Flessibilità, sforzo necessario per modificare il programma operativo;
- Portabilità, sforzo richiesto per trasferire il programma da un ambiente hardware/software all'altro;
- Riutilizzabilità, misura in cui il programma può essere 2riciclato" in altre applicazioni;
- Interoperabilità, per "accoppiare" il programma con un'altro,

10. PACCHETTI DI LAVORO (workpackages)
Il Progetto è stato suddiviso in più parti distinte (ognuna eseguita da uno o più responsabili):
- Project Plan, per definire i vari passaggi della stesura del progetto;
- Diagrammi, per avere una rappresentazione schematica del progetto;
- Codice, per elaborare il programma attraverso un linguaggio di alto livello;

11. RISORSE
//Cosa si intende per risorse nel nostro progetto?

12. BUDGET
Gestione del tempo per la compilazione del progetto

13. CAMBIAMENTI
Ogni cambiamento apportato a qualsiasi parte del progetto è stato discusso tra i vari membri del team; qualora, un membro avesse avuto la necessità di modificare qualcosa, 
si è premunito per avvisare i restanti membri dell'eventuale cambiamento, attraverso l'uso di app di messaggistica.
L'uso di GitHub ha permesso ai membri del team di poter essere sempre aggiornati sullo sviluppo del progetto, qualora la comunicazione diretta non fosse stata 
possibile.

14. CONSEGNA
La consegna finale del Progetto avverrà entro il 05/02/2024, tenendo aperta la possibilità di eventuali manutenzioni e modifiche entro il 10/02/2024



