STORIA DEL PROGETTO:

1. INTRODUZIONE:
Questo progetto intende fornire uno strumento digitale per la gestione delle sale di un ospedale. 
Come obiettivo ci si impone di raggiungere una forma stabile e funzionante del programma, anche se non ancora commercializzabilie, 
soprattutto dal punto di vita grafico.
Responsabili del Progetto: Nicola Cattaneo, Matteo Mangili, Marco Saini.

2. INTERVISTA: 
Il responsabile Nicola Cattaneo ha effettuato un'intervista con un'infermiera dell'Ospedale Papa Giovanni XXIII di Bergamo (BG), 
al fine di raccogliere dati e informazioni utili per la stesura del progetto.

3. DIAGRAMMI UML: 
I tre responsabili hanno collaborato insieme per elaborare il progetto, attraverso la stesura di vari diagrammi di UML: 
- Diagramma dei Casi d'Uso;
- Diagramma di Stato;
- Diagramma delle Classi;
- Diagramma di Sequenza;
- Diagrammin delle Attività

4. CODIFICA JAVA: 
Prendendo spunto dai vari diagrammi, i tre collaboratori hanno codificato il problema proposto in Java, sfruttando l'estensione Rebel di UML e 
completando la codifica aggiungendo classi e attributi, necessari per la stesura del progetto.

5. DATABASE:
Il responsabile Nicola Cattaneo ha costruito un DataBase del problema proposto, attraverso linguaggio JAVA e SQLite


PROJECT PLAN:

1. INTRODUZIONE:
Il progetto in questione è volto a creare uno strumento digitale per la gestione delle sale di un ospedale.
L'obbiettivo principale è quello di analizzare le varie casistiche che si possono presentare nella gestione di un reparto di ospadale, e come
il sistema le gestisce.
Al progetto hanno lavorato i seguenti Collaboratori: Nicola Cattaneo, Matteo Mangili e Marco Saini.
//Per storia del progetto vedi sopra

2. MODELLO DEL PROCESSO
Il Modello del progetto in questione è un modello A Cascata:
ogni fase del progetto è definita e la successiva fase fa riferimento alla precedente;
per ogni fase richiede V&V (Verifica e Validazione), rispettivamente per soddisfare i requisiti 
del progetto stesso (è necessario valutare la correttezza del passaggio alla fase successiva) e per 
capire se il sistema risponde alle esigenze dell'utente (dobbiamo capire se stiamo costruendo il progetto in modo corretttpo).
Prima della stesura del progetto stesso, è necessaria un'attenta analisi del progetto per capire le varie problematiche legate ad esso.

3. ORGANIZZAZIONE DEL PROGETTO
L'idea del progetto è partita da un'intervista, effettuata dal responsabile Cattaneo, ad un'infermiera dell'ospedale Papa Giovanni XXIII di Bergamo (BG);
da questa intervista, il gruppo ha potuto elaborare i vari soggetti coinvolti nella stesura del progetto e le informazioni necessarie affinchè il sistema
svolga le sue funzioni correttamente.

Il team risponde risponde ad un'organizzazione di tipo Squadra Agile: la comunicazione tra i membri della squadra era relativamente debole e spesso ci si è trovati
a lavorare in coppia sui singoli step del progetto, al fine di massimizzare l'efficenza delle operazioni eseguite; sebbene fosse presente una "tabella di marcia" 
da seguire, il gruppo è riuscito comunque a riorganizzare il proprio lavoro qualore si verificavano imprevisti o ritardi.

Ruoli del progetto:
- Responsabile Cattaneo: Idea Progetto, Raccolta di Informazioni, stesura DataBase del Progetto, Programmatore;
- Responsabile Mangili: stesura Project Plan, elaboratore dei Diagrammi, Correzione Errori;
- Responsabile Saini: elaboratore Diagrammi, aiuto per DataBase, Analista;


4. STANDARD, LINEE GUIDA, PROCEDURE
Tutti i collaboratori al progetto hanno rispettato le linee guida e gli standard per portare a termine il progetto.

5. ATTIVITA' DI GESTIONE
Prima di elaborare il progetto stesso, i tre responsabili hanno definito una Tabella di Marcia per poter consegnare nei tempi il progetto; sulla tabella, 
sono state definite delle scadenze da rispettare per completare i vari componenti del progetto.

6. RISCHI
A causa di difficoltà relative a gestione e organizzazione, non è sempre stato possibile per i tre collaboratori lavorare insieme al progetto: 
spesso ogni collaboratore eseguiva i propri compiti a casa, e quando era possibile tutti e tre o solo due responsabili si incontravano per discutere
quali problemi dava il progetto. Spesso ci sono stati problemi legati alla mancanza di informazioni utili per la stesura delle varie fasi del progetto, pertanto 
il team ha dovuto richiedere aiuto al professore di corso per capire come risolvere i vari quesiti, oppure cercare da soli informazioni per risolverli.

7. PERSONALE E TECNICHE
Il team ha comiciato a lavorare al progetto a fine Ottobre / inizio Novembre, per poi seguire i vari punti della tabella di marcia, cercando di restare il più 
possibile nei tempi concordati. 

8. METODI E TECNICHE
L'ambiente di sviluppo utillizzato è GitHUB (per la compilazione delle varie parti del progetto), StarUML (per la creazione dei vari Diagrammi relativi al progetto), 
Eclipse (per la stesura del codice).
//Rivedi capitolo 13 per test

9. GARANZIA DI QUALITA'
Per garantire la qualità del Sistema sono necessari vari fattori:
- Correttezza, il programma soddisfa le sue specifiche e gli obiettivi proposti dall'utente;
- Affidabilità, il programma deve essere in grado di eseguire la sua funzione con la precisa richiesta;
- Efficienza, la quantità di risorse di calcolo e di codice richieste dal programma per eseguire una funzione;
- Integrità, misura in cui è possibile controllare l'accesso al software o i ddati da parte di persone non autorizzzate;
- Usabilità, sforzo richiesto per apprendere, utilizzare, preparere l'input e interpretare l'output del programma;
- Manuntenibilità, sforzo richiesto per individuare e correggere errrori;
- Testabilità, per testare che il programma svolga la funzione prevista;
- Flessibilità, sforzo necessario per modificare il programma operativo;
- Portabilità, sforzo richiesto per trasferire il programma da un ambiente hardware/software all'altro;
- Riutilizzabilità, misura in cui il programma può essere 2riciclato" in altre applicazioni;
- Interoperabilità, per "accoppiare" il programma con un'altro,

10. PACCHETTI DI LAVORO (workpackages)
Il Progetto è stato suddiviso in più parti distinte (ognuna eseguita da uno o più responsabili):
- Project Plan, per definire i vari passaggi della stesura del progetto;
- Diagrammi, per avere una rappresentazione schematica del progetto;
- Codice, per elaborare il programma attraverso un linguaggio di alto livello;

11. RISORSE
//Cosa si intende per risorse nel nostro progetto?

12. BUDGET
Gestione del tempo per la compilazione del progetto

13. CAMBIAMENTI
Grazie all'uso di GitHub, era sempre possibile tenere traccia di eventuali modifiche e cambiamenti delle varie parti del progetto; qualora fosse stato necessario tornare ad
una precedente modifica, è sempre stato possibile farlo, grazie allo storico di GitHub.
Tutti i membri del gruppo si sono confrontati in seguito a varie modifiche, per concordeare se tali modifiche fossero corrette / necessarie.

14. CONSEGNA
La consegna finale del Progetto avverrà entro il mese di Dicembre 2023, con possibile manuntenzione ed eventuali correzioni entro il 08/01/2024



